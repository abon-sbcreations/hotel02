<?phpclass Restaurant_served extends CI_Model {    private $_hotel_restaurant = "hotel_restaurant_master";        private $_restaurant_served = "hotel_resturant_served";    private $_hotel_master = "tbl_hotel_master";    private $_customer_master = "customer_master";    public function getRestaurant_served($params) {        $this->db->select("rs.resturant_service_id,rs.hotel_id,hm.hotel_name,rs.customer_id,cm.cust_name,rs.menu_session,"                ."rs.served_place,rs.served_place_detail,rs.served_on,rs.served_item,rs.isPaid,rs.isFinal");        $this->db->from($this->_restaurant_served." as rs");        $this->db->join($this->_hotel_master." as hm","hm.hotel_id = rs.hotel_id","left");        $this->db->join($this->_customer_master." as cm","cm.cust_id = rs.customer_id","left");        if (isset($params['where']) && !empty($params['where'])) {            $this->db->where($params['where']);        }        $query = $this->db->get();        return $query->result_array();    }    public function postRestaurant($restaurant) {       $this->db->insert($this->_restaurant_served, [            'hotel_id' => $this->session->userdata('hotel_id'),            'customer_id' => $restaurant['cust_id'],            'served_place' => $restaurant['served_place'],            'served_place_detail' => $restaurant['served_place_detail'],            'served_on' => $restaurant['served_on'],            'served_item' => $this->getBillJson($restaurant),            'isPaid' => $restaurant['isPaid']        ]);    }    private function getBillJson($restaurant){        $resMenu = $this->getResturantMenu(['select'=>"menu_id,item_price"]);        $bill1 = [];        for($i = 0; $i<count($restaurant['items']); $i++){            foreach ($resMenu as $k1=>$row1){                if($row1['menu_id'] == $restaurant['items'][$i]){                  $bill1[] = [                      'menu_id' => $restaurant['items'][$i],                      'item_price' => $row1['item_price'],                      'quantity' => $restaurant['itemCount'][$i]                    ];                  }            }        }        return json_encode($bill1);    }    public function billFinal($resturant_service_id){        $this->db->update($this->_restaurant_served, [           'isFinal' => 'Y'        ], ['resturant_service_id' => $resturant_service_id]);    }    public function putRestaurant($restaurant) {        $this->db->update($this->_hotel_restaurant, [               'hotel_id' => $this->session->userdata('hotel_id'),            'customer_id' => $restaurant['cust_id'],            'served_place' => $restaurant['served_place'],            'served_place_detail' => $restaurant['served_place_detail'],            'served_on' => $restaurant['served_on'],            'served_item' => $this->getBillJson($restaurant),            'isPaid' => $restaurant['isPaid']                ], ['resturant_service_id' => $restaurant['resturant_service_id']]);    }    public function deleteRestaurant($where) {        $this->db->delete($this->_restaurant_served, $where);    }    public function getCustomers(){        $this->db->select("cust_id,cust_name");        $this->db->from($this->_customer_master);        $this->db->where(['hotel_id'=>$this->session->userdata('hotel_id')]);        $query = $this->db->get();        return $query->result_array();    }    public function getResturantMenu($params){        $this->db->select($params['select']);         $this->db->from($this->_hotel_restaurant);        $this->db->where(['hotel_id'=>$this->session->userdata('hotel_id')]);        $query = $this->db->get();        return $query->result_array();    }}