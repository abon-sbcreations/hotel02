<?phpclass Bar_served extends CI_Model {    private $_hotel_bar = "hotel_bar_master";        private $_bar_served = "hotel_bar_served";    private $_hotel_master = "tbl_hotel_master";    private $_customer_master = "customer_master";    public function getBar_served($params) {        $this->db->select("bs.bar_service_id,bs.hotel_id,hm.hotel_name,bs.customer_id,cm.cust_name,bs.menu_session,"                ."bs.served_place,bs.served_place_detail,bs.served_on,bs.served_item,bs.isPaid,bs.isFinal");        $this->db->from($this->_bar_served." as bs");        $this->db->join($this->_hotel_master." as hm","hm.hotel_id = bs.hotel_id","left");        $this->db->join($this->_customer_master." as cm","cm.cust_id = bs.customer_id","left");        if (isset($params['where']) && !empty($params['where'])) {            $this->db->where($params['where']);        }        $query = $this->db->get();        return $query->result_array();    }    public function getCatItemsList(){        $query = $this->db->from($this->_hotel_bar)->select("menu_id,menu_cat,item_name")->get();        $result = $query->result_array();        $menus = [];        $items = [];        foreach($result as $key=>$row){            $menu = strtolower($row['menu_cat']);            $item = strtolower($row['item_name']);            $menus[$menu] = 1;            $items[$menu][$row['menu_id']] = $item;        }        return ['barMenu'=>$menus,'baritem'=>$items];    }    public function postBar($bar) {       $this->db->insert($this->_bar_served, [            'hotel_id' => $this->session->userdata('hotel_id'),            'customer_id' => $bar['cust_id'],            'served_place' => $bar['served_place'],            'served_place_detail' => $bar['served_place_detail'],            'served_on' => $bar['served_on'],            'served_item' => $this->getBillJson($bar),            'isPaid' => $bar['isPaid']        ]);    }    private function getBillJson($bar){        $resMenu = $this->getBarMenu(['select'=>"menu_id,item_price,menu_cat"]);        $bill1 = [];        for($i = 0; $i<count($bar['item_names']); $i++){            foreach ($resMenu as $k1=>$row1){                if($row1['menu_id'] == $bar['item_names'][$i]){                  $bill1[] = [                      'menu_id' => $bar['item_names'][$i],                        'menu_id' => $bar['item_names'][$i],                        'item_price' => $row1['item_price'],                      'quantity' => $bar['itemCount'][$i]                    ];                  }            }        }        return json_encode($bill1);    }    public function billFinal($bar_service_id){        $this->db->update($this->_bar_served, [           'isFinal' => 'Y'        ], ['bar_service_id' => $bar_service_id]);    }    public function putBar($bar) {        $this->db->update($this->_bar_served, [               'hotel_id' => $this->session->userdata('hotel_id'),            'customer_id' => $bar['cust_id'],            'served_place' => $bar['served_place'],            'served_place_detail' => $bar['served_place_detail'],            'served_on' => $bar['served_on'],            'served_item' => $this->getBillJson($restaurant),            'isPaid' => $bar['isPaid']                ], ['bar_service_id' => $bar['bar_service_id']]);    }    public function deleteBar($where) {        $this->db->delete($this->_bar_served, $where);    }    public function getCustomers(){        $this->db->select("cust_id,cust_name");        $this->db->from($this->_customer_master);        $this->db->where(['hotel_id'=>$this->session->userdata('hotel_id')]);        $query = $this->db->get();        return $query->result_array();    }    public function getBarMenu($params){        $this->db->select($params['select']);         $this->db->from($this->_hotel_bar);        $this->db->where(['hotel_id'=>$this->session->userdata('hotel_id')]);        $query = $this->db->get();        return $query->result_array();    }}