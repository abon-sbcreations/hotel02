<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Bars_served extends CI_Controller {    private $_hotel_bar = "hotel_bar_served";    public function __construct() {        parent::__construct();        $this->load->helper('url');        $this->load->helper('commonmisc_helper');        $this->load->helper('validationmisc_helper');        $this->load->model('Bar_served');        $u1 = $this->session->userdata('admin_user_id');        if (!isset($u1)) {            redirect('/admins', 'refresh');        }    }    public function bill_list() {        $loggedHotelAdmin = $this->session->all_userdata();        $head02Temp = $this->load->view('templates/head02', ['loggedHotelAdmin' => $loggedHotelAdmin], TRUE);        $leftmenu02Temp = $this->load->view('templates/leftMenu02', ['activeMenu' => 'bars_served/bill_list'], TRUE);        $cats = $this->Bar_served->getCatItemsList();        $this->load->view('bar_serve/serve_list', [            'head02Temp' => $head02Temp,            'leftmenu02Temp' => $leftmenu02Temp,            'timeSlotOptions' => timeSlotOptions(),            'customerOptions' => $this->getCustomers(),            'barMenu' => $cats['barMenu'],            'barItem' => $cats['baritem'],            'servePlaceOption' => getServePlace(),            'paidOpion' => getItemAvailable(),            'availableOption' => getItemAvailable(),            'menuCatOption' => getSession(),        ]);    }    public function ajaxAllBarsServedDataTable() {        // Datatables Variables        $draw = intval($this->input->get("draw"));        $start = intval($this->input->get("start"));        $length = intval($this->input->get("length"));        $servedPlace = getServedPlace();        $bars = $this->Bar_served->getBar_served(['where' => ['bs.hotel_id' => $this->session->userdata('hotel_id')]]);        $rows = [];        if (!empty($bars)) {            foreach ($bars as $k => $bar) {                $rows[] = [                    "DT_RowId" => "row_" . $bar['bar_service_id'],                    "bar_service_id" => $bar['bar_service_id'],                    "hotel_id" => $bar['hotel_id'],                    "hotel_name" => $bar['hotel_name'],                    "customer_id" => $bar['customer_id'],                    "cust_name" => ucwords($bar['cust_name']),                    "menu_session" => $bar['menu_session'],                    "served_place" => ucwords($servedPlace[$bar["served_place"]] . "&nbsp;-<br>&nbsp;" . $bar["served_place_detail"]),                    "served_on" => $bar['served_on'],                    "served_item" => $this->viewServedItems($bar['served_item']),                    "isPaid" => $bar['isPaid'] == "Y" ? "Yes" : "No",                    "isFinal" => $bar['isFinal'] == "Y" ? "Yes" : "No"                ];            }        }        echo json_encode([            "draw" => $draw,            "recordsTotal" => count($bars),            "recordsFiltered" => count($bars),            "data" => $rows        ]);    }    private function viewServedItems($json) {        $items = $this->Bar_served->getBarMenu(['select' => "menu_id,item_name"]);        $arr = json_decode($json, true);        $html1 = "<table class='table table-striped2 table-bordered2'><thead><tr><th>Item</th><th>Quantity</th><th>Price</th></tr></thead><tbody>";        $total_price = 0;        $totalItem = 0;        if (!empty($arr)) {            foreach ($arr as $k => $row) {                $totalItem += $row['quantity'];                $item_name = "";                $item_price = $row['quantity'] * $row['item_price'];                $total_price += $item_price;                foreach ($items as $key => $item) {                    if ($row['menu_id'] == $item['menu_id']) {                        $item_name = ucwords($item['item_name']);                    }                }                $html1 .= "<tr><td>{$item_name}</td><td>{$row['quantity']}</td><td>{$item_price}&nbsp;[{$row['item_price']}]</td></tr>";            }            $html1 .= "<tr><td colspan=2>Total item &nbsp;[{$totalItem}]</td><td>Total Amount &nbsp;{$total_price}</td></tr>";        }        $html1 .= "</tbody></table>";        return $html1;    }    public function ajaxBarServeDetails() {        $params = [            'where' => ['bar_service_id' => $this->input->post('bar_service_id')]        ];        $bar = $this->Bar_served->getBar_served($params);        echo json_encode($bar[0]);    }    public function ajaxBarMasterDelete() {        $where = ['bar_service_id' => $this->input->post('bar_service_id')];        $bar = $this->Bar_served->deleteBar($where);        return json_encode(['true']);    }    public function ajaxUniqueBarAttr() {        $post = $this->input->post();        if (isset($post['primaryVal']) && !empty($post['primaryVal'])) {            echo checkHotelUnique([                'table' => $this->_hotel_bar,                'primary_id' => "menu_id",                'primaryVal' => $post['primaryVal'],                'hotelIdValue' => $this->session->userdata('hotel_id'),                'attr' => $post['attr'],                'attrVal' => $post['attrVal']            ]);        } else {            echo checkHotelUnique([                'table' => $this->_hotel_bar,                'primary_id' => "menu_id",                'primaryVal' => 0,                'hotelIdValue' => $this->session->userdata('hotel_id'),                'attr' => $post['attr'],                'attrVal' => $post['attrVal']            ]);        }    }    public function ajaxBarMasterSubmit() {        $post = $this->input->post();        if (isset($post['menu_id']) && !empty($post['menu_id'])) {            $this->Bar_served->putBar($post);        } else {            $this->Bar_served->postBar($post);        }    }    private function getCustomers() {        $result = $this->Bar_served->getCustomers();        $customers = [];        if (!empty($result)) {            foreach ($result as $key => $cst) {                $customers[$cst['cust_id']] = $cst['cust_name'];            }        }        return $customers;    }    public function setAjaxFinalBill() {        $this->Bar_served->billFinal($this->input->post('bar_service_id'));    }}