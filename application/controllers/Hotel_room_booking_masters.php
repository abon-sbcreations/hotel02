<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Hotel_room_booking_masters extends CI_Controller {    private $roomStatus = ['available'=>'available','occupied'=>'occupied','dirty'=>'dirty'];    public function __construct() {        parent::__construct();        $this->load->helper('url');        $this->load->helper('commonmisc_helper');       $this->load->model('Hotel_room_booking_master');        $u1 = $this->session->userdata('admin_user_id');        if (!isset($u1)) {            redirect('/admins', 'refresh');        }    }    public function index() {        $loggedHotelAdmin = $this->session->all_userdata();        $head02Temp = $this->load->view('templates/head02',['loggedHotelAdmin'=>$loggedHotelAdmin],TRUE);        $leftmenu02Temp = $this->load->view('templates/leftMenu02',['activeMenu'=>'hotel_room_booking_masters'],TRUE);        $this->load->view('hotel_room_booking_masters/booking_list', [            'head02Temp'=>$head02Temp,            'leftmenu02Temp'=>$leftmenu02Temp,            'customerOptions' => customerOptions(),            'roomTypeOptions' => $this->Hotel_room_booking_master->getAvailableRoomTypes(),            'availableRoomsList' => $this->Hotel_room_booking_master->getAvailableRooms()        ]);    }    public function ajaxAllRoomBookingMasterDataTable() {        $draw = intval($this->input->get("draw"));        $start = intval($this->input->get("start"));        $length = intval($this->input->get("length"));        $RoomBookingMaster = $this->Hotel_room_booking_master->getHotelRoomBookingDetails([]);                $rows = [];        foreach ($RoomBookingMaster as $k => $rb) {            $rows[] = [                "DT_RowId" => "row_" . $rb['booking_id'],                "booking_id" => $rb['booking_id'],                'cust_name'=> ucwords($rb['cust_name']),                'adult_no'=>$rb['adult_no'],                'child_no'=>$rb['child_no'],                'room_count'=>$rb['room_count'],                'check_in'=> $rb['check_in'],                'check_out'=> $rb['check_out']            ];        }        echo json_encode([            "draw" => $draw,            "recordsTotal" => count($RoomBookingMaster),            "recordsFiltered" => count($RoomBookingMaster),            "data" => $rows        ]);    }    public function ajaxRoomBookingMasterDetails() {        $params = [            'where' => ['hrbm.booking_id' => $this->input->post('booking_id')]        ];        $booking = $this->Hotel_room_booking_master->getHotelRoomBookingDetails($params);        echo json_encode($booking[0]);    }    public function ajaxRoomBookingDetails() {        $params = [            'where' => ['hrbd.booking_id' => $this->input->post('booking_id')]        ];        $bookings = $this->Hotel_room_booking_master->getRoomBookingDetails($params);        echo json_encode($bookings);    }    public function ajaxRoomBookingMasterDelete() {        $where = ['booking_id' => $this->input->post('booking_id')];        $comp = $this->Hotel_room_booking_master->deleteHotelRoomBookingDetails($where);        return json_encode(['true']);    }    public function ajaxRoomBookingMasterSubmit() {        $post = $this->input->post();                if (isset($post['booking_id']) && !empty($post['booking_id'])) {            $this->Hotel_room_booking_master->putHotelRoomBookingMasters($post);        } else {            $this->Hotel_room_booking_master->postHotelRoomBookingMasters($post);        }    }    public function ajaxRoomBookingDetailsSubmit(){        $post = $this->input->post();         $this->Hotel_room_booking_master->postHotelRoomBookingDetails($post);    }    public function ajaxUniqueCustomerHotelAttr(){        $post = $this->input->post();        if (isset($post['hotelIdValue']) && !empty($post['hotelIdValue'])) {            echo checkHotelUnique([                'table' => $this->_customer_master,                'primary_id' => "cust_id",                'primaryVal' => $post['primaryVal'],                'hotelIdValue' => $post['hotelIdValue'],                'attr' => $post['attr'],                'attrVal' => $post['attrVal']                    ]);        } else {            echo checkHotelUnique([                'table' => $this->_customer_master,                'primary_id' => "cust_id",                'primaryVal' => 0,                'hotelIdValue' => $post['hotelIdValue'],                'attr' => $post['attr'],                'attrVal' => $post['attrVal']                    ]);        }            }    public function ajaxUniqueCustDocAttr(){        $post = $this->input->post();        if (isset($post['primaryVal']) && !empty($post['primaryVal'])) {            echo checkTableUnique([                'table' => $this->_customer_master,                'primary_id' => "cust_id",                'primaryVal' => $post['primaryVal'],                'attr' => $post['attr'],                'attrVal' => $post['attrVal']                    ]);        } else {            echo checkTableUnique([                'table' => $this->_customer_master,                'primary_id' => "cust_id",                'primaryVal' => 0,                'attr' => $post['attr'],                'attrVal' => $post['attrVal']                    ]);        }            }    public function ajaxCheckMemberValid(){        $post = $this->input->post();        $Customers = $this->Customer->getCustomer(['where'=>['cm.cust_id'=>$post['cust_id']]]);        $membership = $this->Membership_master->getMembershipMasters(['where'=>['mm.membership_id'=>$post['membership_type']]]);        $dArr = explode("-",$post['membership_issue_date']);        $startDate = strtotime($dArr[2]."-".$dArr[1]."-".$dArr[0]);        $endDate = strtotime("+{$membership[0]['membership_validity']} months", $startDate);        $currentTime = time();        if( $currentTime >= $startDate && $currentTime <= $endDate){            echo 0;        }else{            echo 1;        }    }}