<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Bars extends CI_Controller {    private $_hotel_bar_master = "hotel_bar_master";        public function __construct() {        parent::__construct();        $this->load->helper('url');        $this->load->helper('commonmisc_helper');        $this->load->helper('validationmisc_helper');        $this->load->model('Bar');        $u1 = $this->session->userdata('hotel_userid');         if(!isset($u1)){            redirect('/admins', 'refresh');        }    }    public function bar_list() {        $loggedHotelAdmin = $this->session->all_userdata();        $head02Temp = $this->load->view('templates/head02',['loggedHotelAdmin'=>$loggedHotelAdmin],TRUE);        $leftmenu02Temp = $this->load->view('templates/leftMenu02',['activeMenu'=>'bars/bar_list'],TRUE);        $this->load->view('bars/bar_list', [            'head02Temp'=>$head02Temp,            'leftmenu02Temp'=>$leftmenu02Temp,            'timeSlotOptions' => timeSlotOptions(),            'menuTypeOption' => getMenuType(),            'availableOption' => getItemAvailable()                    ]);    }    public function ajaxAllBarMasterDataTable() {        // Datatables Variables        $isAvailable = getItemAvailable();        $draw = intval($this->input->get("draw"));        $start = intval($this->input->get("start"));        $length = intval($this->input->get("length"));        $bars = $this->Bar->getBar([]);        $rows = [];        foreach ($bars as $k => $bar) {            $rows[] = [                "DT_RowId" => "row_" . $bar['menu_id'],      "item_desc" => $bar['item_desc'],                "menu_id" => $bar['menu_id'],                "hotel_id" => $this->session->userdata('hotel_id'),                "menu_cat" => ucwords($bar['menu_cat']),     "item_name" => ucwords($bar['item_name']),                "item_price" => $bar['item_price'],          "item_available" => $isAvailable[$bar['item_available']],                            ];        }        echo json_encode([            "draw" => $draw,            "recordsTotal" => count($bars),            "recordsFiltered" => count($bars),            "data" => $rows        ]);    }    public function ajaxBarMasterDetails() {        $params = [            'where' => ['menu_id' => $this->input->post('menu_id')]        ];        $bars = $this->Bar->getBar($params);        echo json_encode($bars[0]);    }    public function ajaxHotelbarMasterDetails(){          $params = [            'where' => ['menu_id' => $this->input->post('menu_id')]        ];        $bar = $this->Bar->getBar($params);        echo json_encode($bar[0]);    }    public function ajaxBarMasterDelete() {        $where = ['menu_id' => $this->input->post('menu_id')];        $this->Bar->deleteBar($where);        return json_encode(['true']);    }        public function ajaxHotelBarMasterSubmit() {        $post = $this->input->post();        if (isset($post['menu_id']) && !empty($post['menu_id'])){            $this->Bar->putBar($post);        } else {            $this->Bar->postBar($post);        }    }    public function ajaxUniqueHotelBarsAttr(){        $post = $this->input->post();        if (isset($post['attrVal']) && !empty($post['attrVal'])) {            echo checkHotelUnique([                'table' => $this->_hotel_bar_master,                'primary_id' => "menu_id",                'primaryVal' => $post['primaryVal'],                'hotelIdValue' => $this->session->userdata('hotel_id'),                'attr' => $post['attr'],                'attrVal' => $post['attrVal']                    ]);        } else {            echo checkHotelUnique([                'table' => $this->_hotel_bar_master,                'primary_id' => "cust_id",                'primaryVal' => 0,                'hotelIdValue' => $this->session->userdata('hotel_id'),                'attr' => $post['attr'],                'attrVal' => $post['attrVal']                    ]);        }            }}